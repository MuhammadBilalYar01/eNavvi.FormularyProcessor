// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using eNavvi.FormularyProcessor.Entities;

namespace eNavvi.FormularyProcessor.Data
{
    public partial class eNavviContext : DbContext
    {
        public eNavviContext()
        {
        }

        public eNavviContext(DbContextOptions<eNavviContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Plan> Plan { get; set; }
        public virtual DbSet<RelatedInfo> RelatedInfo { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Plan>(entity =>
            {
                entity.HasIndex(e => e.PlanGuid, "IDX_Plan_PlanGuid")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "UQ_Plan_Name")
                    .IsUnique();

                entity.HasIndex(e => e.StateId, "nci_wi_Plan_012781746C563862B5AD557183BFAAB2");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Country)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.County).IsUnicode(false);

                entity.Property(e => e.Employer)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.LastUpdatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.PlanGuid)
                    .IsRequired()
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(newid())")
                    .IsFixedLength();

                entity.Property(e => e.PublishDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('2000-01-01 00:00:00.000')");

                entity.Property(e => e.StateId).HasDefaultValueSql("((52))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Url)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RelatedInfo>(entity =>
            {
                entity.HasIndex(e => e.Rxcui, "IDX_RelatedInfo");

                entity.HasIndex(e => e.Rxcui, "uq_index")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BrandName)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.DosageFromGroup)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.DrugClasses)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Ingredients)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.InitialFilterDfgs).IsUnicode(false);

                entity.Property(e => e.LastUpdatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}